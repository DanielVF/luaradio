local radio = require('radio')

if #arg < 1 then
    io.stderr:write("Usage: " .. arg[0] .. " <FM radio frequency>\n")
    os.exit(1)
end

local frequency = tonumber(arg[1])
local offset = -200e3

local top = radio.CompositeBlock()
local a0 = radio.RtlSdrSource(frequency + offset, 1102500, {autogain = true})
local a1 = radio.TunerBlock(offset, 200e6, 5)
local a2 = radio.FrequencyDiscriminatorBlock(5.0)
local a3 = radio.HilbertTransformBlock(257)
local a4 = radio.DelayBlock(193)
local a5 = radio.MultiplyConjugateBlock()
local a6 = radio.LowpassFilterBlock(256, 4e3)
local a7 = radio.RootRaisedCosineFilterBlock(101, 1, 1187.5)
local a8 = radio.BinaryPhaseCorrectorBlock(2000)
local b0 = radio.BandpassFilterBlock(193, {18e3, 20e3})
local b1 = radio.PLLBlock(1000.0, 19e3-100, 19e3+100, 3.0)
local b2 = radio.PLLBlock(1000.0, 19e3-100, 19e3+100, 1/16.0)
local b3 = radio.ComplexToRealBlock()
local b4 = radio.DelayBlock(357)
local e0 = radio.SamplerBlock()
local e1 = radio.ComplexToRealBlock()
local e2 = radio.SlicerBlock()
local e3 = radio.DifferentialDecoderBlock()
local e4 = radio.RDSFrameBlock()
local e5 = radio.RDSDecodeBlock()
local e6 = radio.JSONSink()

local p1 = radio.GnuplotSpectrumSink(2048, 'Demodulated FM Spectrum', {yrange = {-120, -40}})
local p2 = radio.GnuplotSpectrumSink(2048, 'BPSK Spectrum', {yrange = {-130, -60}, xrange = {-8000, 8000}})
local p3 = radio.GnuplotXYPlotSink(1024, 'BPSK Constellation', {complex = true, yrange = {-0.03, 0.03}, xrange = {-0.03, 0.03}})

top:connect(a0, a1, a2, a3, a4)
top:connect(a3, b0)
top:connect(b0, b1)
top:connect(a4, 'out', a5, 'in1')
top:connect(b1, 'out', a5, 'in2')
top:connect(a5, a6, a7, a8)
top:connect(b0, b2, b3, b4)
top:connect(a8, 'out', e0, 'data')
top:connect(b4, 'out', e0, 'clock')
top:connect(e0, e1, e2, e3, e4, e5, e6)
top:connect(a2, p1)
top:connect(a7, p2)
top:connect(e0, p3)
top:run()
